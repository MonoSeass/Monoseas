<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
">

   <!--spring不识别mybatis自带的数据源,所以我们需要另外配置-->
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
      <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
      <property name="url">
         <value><![CDATA[jdbc:mysql://localhost:3306/student?useUnicode=true&characterEncoding=utf-8]]></value>
      </property>
      <property name="username" value="root"/>
      <property name="password" value="root"/>
   </bean>

   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <!--将配置好的数据源放入sqlSessionFactory中-->
      <property name="dataSource" ref="dataSource" />
      <!--读取一些在mybatis-config中的配置-->
      <property name="configLocation" value="classpath:mybatis-config.xml"/>
      <property name="mapperLocations">
         <list>
            <value>classpath:dao/*.xml</value>
         </list>
      </property>
   </bean>

<!--   <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
<!--      <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
<!--   </bean>-->

<!--   手动创建Mapper实例,并配置-->
<!--   <bean id="carMapper" class="com.mxz.Dao.dao.impl.carMapperImpl">-->
<!--      <property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>-->
<!--   </bean>-->

   <!--通过配置文件生成mapper实例-->
   <!--<bean id="carMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
      <property name="mapperInterface" value="dao.MenuMapper"/>
      <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
   </bean>-->

   <!--自动扫描装配实例  自动生成的Bean首字母小写-->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
      <property name="basePackage" value="dao.*"/>
   </bean>
   <!--扫描注解-->


   <!--事务管理器-->
   <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"/>
   </bean>
   <tx:annotation-driven transaction-manager="txManager"/>
   <!--通过<tx:advice>为指定的事务管理器配置事务的属性-->
<!--   <tx:advice id="txAdvice" transaction-manager="txManager">-->
<!--      &lt;!&ndash;配置属性,声明事务的规则&ndash;&gt;-->
<!--      <tx:attributes>-->
<!--         <tx:method name="get*" propagation="SUPPORTS" />-->
<!--         <tx:method name="add*" propagation="REQUIRED" />-->
<!--         <tx:method name="upd*" propagation="REQUIRED" />-->
<!--         <tx:method name="del*" propagation="REQUIRED" />-->
<!--         <tx:method name="*" propagation="REQUIRED" />-->
<!--      </tx:attributes>-->
<!--   </tx:advice>-->

<!--   <aop:config>-->
<!--      &lt;!&ndash;定义切入点&ndash;&gt;-->
<!--      <aop:pointcut id="bizMethod" expression="execution(* com.mxz.Biz..*.*(..))"/>-->
<!--      <aop:advisor advice-ref="txAdvice" pointcut-ref="bizMethod"/>-->
<!--   </aop:config>-->
   <context:component-scan base-package="dao,service"/>
</beans>